{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Documentos/group-links/pages/[slug].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Prismic from 'prismic-javascript';\nimport { useRouter } from 'next/router';\n\nconst RedirectTo = () => {\n  const router = useRouter();\n  useEffect(() => {\n    setTimeout(() => {\n      router.push('/');\n    }, 2000);\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"URL n\\xE3o encontrada\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Estamos redirecionando voc\\xEA para a central de links.\"));\n};\n\nexport async function getServerSideProps({\n  params,\n  res\n}) {\n  const client = Prismic.client(\"https://linksgroup.cdn.prismic.io/api/v2\");\n  const link = await client.getByUID('shortlink', params.slug);\n\n  if (link) {\n    res.statusCode = 301; //conteudo movido permanentemente \n\n    res.setHeader('Location', link.data.destino.url); //redireciona\n\n    res.end();\n    return;\n  }\n\n  console.log(link);\n  return {\n    props: {}\n  };\n}\nexport default RedirectTo;","map":{"version":3,"sources":["/home/leonardo/Documentos/group-links/pages/[slug].js"],"names":["React","useEffect","Prismic","useRouter","RedirectTo","router","setTimeout","push","getServerSideProps","params","res","client","link","getByUID","slug","statusCode","setHeader","data","destino","url","end","console","log","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,MAAM,CAACE,IAAP,CAAY,GAAZ;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAFF,CADF;AAMD,CAbD;;AAeA,OAAO,eAAeC,kBAAf,CAAkC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlC,EAAkD;AACvD,QAAMC,MAAM,GAAGT,OAAO,CAACS,MAAR,CAAe,0CAAf,CAAf;AACA,QAAMC,IAAI,GAAG,MAAMD,MAAM,CAACE,QAAP,CAAgB,WAAhB,EAA6BJ,MAAM,CAACK,IAApC,CAAnB;;AACA,MAAGF,IAAH,EAAQ;AACNF,IAAAA,GAAG,CAACK,UAAJ,GAAiB,GAAjB,CADM,CACgB;;AACtBL,IAAAA,GAAG,CAACM,SAAJ,CAAc,UAAd,EAA0BJ,IAAI,CAACK,IAAL,CAAUC,OAAV,CAAkBC,GAA5C,EAFM,CAE4C;;AAClDT,IAAAA,GAAG,CAACU,GAAJ;AACA;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,SAAO;AACLW,IAAAA,KAAK,EAAE;AADF,GAAP;AAGD;AAED,eAAenB,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport Prismic from 'prismic-javascript';\nimport { useRouter } from 'next/router'\n\nconst RedirectTo = () => {\n  const router = useRouter();\n  useEffect(() => {\n    setTimeout(() => {\n      router.push('/')\n    }, 2000)\n  }, [])\n  return (\n    <div>\n      <h1>URL não encontrada</h1>\n      <p>Estamos redirecionando você para a central de links.</p>\n    </div>\n  );\n};\n\nexport async function getServerSideProps({ params, res }){\n  const client = Prismic.client(\"https://linksgroup.cdn.prismic.io/api/v2\");\n  const link = await client.getByUID('shortlink', params.slug);\n  if(link){\n    res.statusCode = 301; //conteudo movido permanentemente \n    res.setHeader('Location', link.data.destino.url); //redireciona\n    res.end();\n    return;\n  }\n  console.log(link)\n  return {\n    props: {},\n  }\n}\n\nexport default RedirectTo;"]},"metadata":{},"sourceType":"module"}